apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-ui
  name: ml-pipeline-ui
spec:
  selector:
    matchLabels:
      app: ml-pipeline-ui
  template:
    metadata:
      labels:
        app: ml-pipeline-ui
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: aws-storage-ml-pipeline-ui-config
      containers:
        - image: gcr.io/ml-pipeline/frontend:dummy
          imagePullPolicy: IfNotPresent
          name: ml-pipeline-ui
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
          env:
            - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
              value: /etc/config/viewer-pod-template.json

            - name: ARGO_ARCHIVE_LOGS
              value: "true"
            - name: ARGO_ARCHIVE_ARTIFACTORY
              value: s3
            - name: ARGO_ARCHIVE_BUCKETNAME
              valueFrom:
                secretKeyRef:
                  name: aws-storage-secret
                  key: s3_bucket
            - name: ARGO_ARCHIVE_PREFIX
              value: artifacts
            - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
              value: /etc/config/viewer-tensorboard-template.json
            - name: METADATA_ENVOY_SERVICE_SERVICE_HOST
              value: metadata-envoy-service
            - name: ML_PIPELINE_SERVICE_HOST
              value: ml-pipeline
            - name: DISABLE_GKE_METADATA
              value: "true"

            - name: ALLOW_CUSTOM_VISUALIZATIONS
              value: "true"

            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-storage-secret
                  key: s3_access_key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-storage-secret
                  key: s3_secret_key
          readinessProbe:
            exec:
              command:
                - wget
                - -q # quiet
                - -S # show server response
                - -O
                - "-" # Redirect output to stdout
                - http://localhost:3000/apis/v1beta1/healthz
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command:
                - wget
                - -q # quiet
                - -S # show server response
                - -O
                - "-" # Redirect output to stdout
                - http://localhost:3000/apis/v1beta1/healthz
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
      serviceAccountName: ml-pipeline-ui
